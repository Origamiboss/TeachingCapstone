extends layout.jade

block toolbar
    if(role == 'teacher')   
        button(onclick="togglePopup('teacher')") Create Class
    if(role == 'student')
        button(onclick="togglePopup('student')") Add Class
    button(onclick="findClass()") Change Class
    button(onclick="logOut()") Sign Out
block content
    div(class="assignments")
        div
            h3 Assignments:
            //check if teacher
            if(role == 'teacher')
                button(onclick="toggleAddClass()") Add Assignment
        div(id="assignmentHolder")
    div(id="changeClassOverlay" class="overlay-container")
        div(class="popup-box")
            h2(style="color: green;">Popup Form)
            form(class="form-container")
                label(class="form-label" for="name") Select Your Class
                div(id="classHolder" class="holder-popup")

            button(class="btn-close-popup" onclick="togglePopupChange()") Close
    //teacher form   
    div(id="createClassOverlay" class="overlay-container")
        div(class="popup-box")
            h2(style="color: green;">Popup Form)
            form(class="form-container")
                label(class="form-label" for="name") Type in your Class ID
                input(id="classIdInput" type="text")
                label(class="form-label" for="name") Insert Class Name:
                input(id="classNameInput" type="text")
                p(id="errorText" class="error")
            button(class="btn-submit" onclick="createClass()") Submit
            button(class="btn-close-popup" onclick="togglePopup()") Close
    //student form
    div(id="addClassOverlay" class="overlay-container")
        div(class="popup-box")
            h2(style="color: green;") Popup Form
            form(class="form-container")
                label(class="form-label" for="name") Type in your Class ID
                input(id="classIdInput" type="text")
                p(class="error" id="errorText")
            button(class="btn-submit" onclick="addClass()") Submit
            button(class="btn-close-popup" onclick="togglePopup()") Close

    //add class Overlay
    div(id="CreateAssignmentOverlay" class="overlay-container")
        div(class="popup-box")
            h2(style="color: green;") Popup Form
            form(class="form-container")
                label(class="form-label" for="name") Type in your Assignment Name
                input(id="assignmentName" type="text")
                label(class="form-label" for="name") Type in your Assignment Id
                input(id="assignmentId" type="text")
                p(class="error" id="errorText")
            button(class="btn-submit" onclick="createAssignment()") Create
            button(class="btn-close-popup" onclick="toggleAddClass()") Close
    script.
        //set up the role
        var role = `#{role}`;
        var globalClassName = "Null";
        console.log(role);
        function logOut() {
            fetch('/mainPage/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        // Handle error
                        console.log("Error can't log out");
                    } else {
                        //success
                        window.location.href = '/frontPage';
                    }
                });
        }
        function findClass() {
            var popup = document.getElementById("changeClassOverlay");
            popup.classList.toggle("show");
            // Fill it up with classes
            const container = document.getElementById('classHolder');
            container.innerHTML = '';  // Clear any previous buttons
            // Send the data to the server via a POST request
            fetch('/mainPage/findClasses', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        // Handle error
                        let errorText = document.createElement('p');
                        errorText.innerHTML = data.error;
                        container.appendChild(errorText);
                    } else {
                        // Successful response
                        const classNames = data.classes;

                        if (classNames.length === 0) {
                            // Handle case where no classes are returned
                            let noClassesMessage = document.createElement('p');
                            noClassesMessage.innerHTML = 'No classes found';
                            container.appendChild(noClassesMessage);
                        } else {
                            // Create buttons for each class
                            for (let i = 0; i < classNames.length; i++) {
                                let button = document.createElement('button');
                                button.innerHTML = classNames[i];
                                button.onclick = function () {
                                    selectClass(classNames[i]);
                                };
                                container.appendChild(button);
                            }
                        }
                    }
                })
                .catch(error => {
                    // Handle fetch error
                    let errorText = document.createElement('p');
                    errorText.innerHTML = error;
                    container.appendChild(errorText);
                });
        }
        function togglePopup(){
            if(role == 'student'){
                var popup = document.getElementById("addClassOverlay");
                popup.classList.toggle("show");
            }else if(role == 'teacher'){
                var popup = document.getElementById("createClassOverlay");
                popup.classList.toggle("show");
            }
        }
        function togglePopupChange(){
            var popup = document.getElementById("changeClassOverlay");
            popup.classList.toggle("show");
        }
        function createClass() {
            //create a class with the information in classIdInput and classNameInput
            var classId = $('#classIdInput').val();
            var className = $('#classNameInput').val();

            // Send the data to the server via a POST request
            fetch('/mainPage/addClass', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ classId, className })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        // Handle error
                        let errorText = document.getElementById("errorText");
                        errorText.innerHTML = data.error;
                    } else {
                        // Successful response
                        console.log(data.classes);
                        togglePopup();
                    }
                })
                .catch(error => {
                    // Handle fetch error
                    let errorText = document.getElementById("errorText");
                    errorText.innerHTML = error;
                });

        }
        function addClass() {
            var classId = $('#classIdInput').val();
            //add the class to the database
            fetch('/mainPage/addClassConnection', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ classId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.error) {
                        // Handle error
                        let errorText = document.getElementById("errorText");
                        errorText.innerHTML = data.error;
                    } else {
                        // Successful response
                        console.log(data.classes);
                        toggleAddPopup();
                    }
                })
                .catch(error => {
                    // Handle fetch error
                    let errorText = document.getElementById("errorText");
                    errorText.innerHTML = error;
                });
        }
        function selectClass(className) {
            event.preventDefault();
            globalClassName = className;
            fetch('/mainPage/findAssignments', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ className })
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    // Handle error
                    console.log(data.error);
                } else {
                    // Successful response
                    const assignments = data.assignments;
                    var container = document.getElementById("assignmentHolder");
                    container.innerHTML = '';

                    if (assignments.length === 0) {
                        let noAssignmentsMessage = document.createElement('p');
                        noAssignmentsMessage.innerHTML = 'No assignments found';
                        container.appendChild(noAssignmentsMessage);
                    } else {
                        for (let i = 0; i < assignments.length; i++) {
                            let button = document.createElement('button');
                            if (role == 'student') {
                                button.innerHTML = assignments[i].name + " Due: " + assignments[i].dueDate + " Grade: " + assignments[i].grade;
                            } else if (role == 'teacher') {
                                button.innerHTML = assignments[i].name + " Due: " + assignments[i].dueDate + " Grade: ";
                            }

                            button.onclick = function () {
                                if (role == 'student') {
                                    fetch('/mainPage/goToAssignment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({ assignId: assignments[i].id, assignName: assignments[i].name })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.error) {
                                            console.log(data.error);
                                        } else {
                                            window.location.href = '/assignmentView';
                                        }
                                    })
                                    .catch(error => {
                                        console.log(error);
                                    });
                                }

                                // Teacher-specific logic can be handled here
                                else if (role == 'teacher') {
                                    // Handle teacher-specific logic if needed
                                    fetch('/mainPage/goToAssignment', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({ assignId: assignments[i].id, assignName: assignments[i].name })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.error) {
                                            console.log(data.error);
                                        } else {
                                            window.location.href = '/assignmentEditor';
                                        }
                                    })
                                    .catch(error => {
                                        console.log(error);
                                    });
                                }
                            };

                            container.appendChild(button);
                        }
                    }
                }
            })
            .catch(error => {
                console.log(error);
            });

            togglePopupChange();
        }
        function toggleAddClass(){
            var popup = document.getElementById("CreateAssignmentOverlay");
            popup.classList.toggle("show");
        }
        function createAssignment(){
            //get the assignment name and Id
            const assignId = document.getElementById("assignmentId").value;
            const assignName = document.getElementById("assignmentName").value;
            //create assignment
            fetch('/mainPage/makeAssignment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({className: globalClassName, assignId: assignId, assignName: assignName})
            })
            .then(response => response.json())
            .then(data => {
                if (data.error) {
                    console.log(data.error);
                } else {
                    window.location.href = '/assignmentEditor';
                }
            })
            .catch(error => {
                console.log(error);
            });
        }